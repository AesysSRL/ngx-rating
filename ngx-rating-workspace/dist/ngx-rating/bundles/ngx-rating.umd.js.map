{"version":3,"file":"ngx-rating.umd.js","sources":["../../../projects/ngx-rating/src/lib/ngx-rating.service.ts","../../../projects/ngx-rating/src/lib/color-generator.ts","../../../projects/ngx-rating/src/lib/ngx-rating.component.ts","../../../projects/ngx-rating/src/lib/ngx-rating.component.html","../../../projects/ngx-rating/src/lib/ngx-rating.module.ts","../../../projects/ngx-rating/src/public-api.ts","../../../projects/ngx-rating/src/ngx-rating.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxRatingService {\n\n  constructor() { }\n}\n","import { Color, Item } from \"./model\";\r\n\r\nexport function getColorScale(items: Item[]): Item[] {\r\n\r\n  if(!checkIntegrity(items)){\r\n    console.error(\"ALL RGB VALUES MUST BE BETWEEN 0 AND 255\");\r\n    return items.map(item => {\r\n      return {\r\n        ...item,\r\n        color: getColor(255, 0, 0)\r\n      }\r\n    });\r\n  }\r\n\r\n  if(!items[0].color) {\r\n    console.error(\"SET FIRST ITEM'S COLOR FIELD\");\r\n    let toReturn = items;\r\n    toReturn[0].color = getColor(255, 0, 0);\r\n  }\r\n  if(items[0].color && !items[items.length-1].color) {\r\n    const color = items[0].color;\r\n    return items.map(item => {return {...item, color: color}});\r\n  } else {\r\n    let toReturn: Item[] = [items[0]];\r\n    while(toReturn.length !== items.length) {\r\n      let toCalculate = [];\r\n      let first: Color = toReturn[toReturn.length - 1].color || {} as Color;\r\n      for(let i = toReturn.length; !items[i].color && i < items.length; i++) {\r\n        toCalculate.push(items[i]);\r\n      }\r\n      let last: Color = items[toReturn.length + toCalculate.length].color  || {} as Color;\r\n      toReturn = toReturn.concat(calculateColors(first, last, toCalculate));\r\n      toReturn.push(items[toReturn.length]);\r\n    }\r\n    return toReturn;\r\n  }\r\n}\r\n\r\nfunction getColor(red: number, green: number, blue: number): Color {\r\n  return {\r\n    red: red,\r\n    green: green,\r\n    blue: blue\r\n  }\r\n}\r\n\r\nfunction calculateColors(first: Color, last: Color, items: Item[]): Item[] {\r\n  const difference = getColor(\r\n    last.red - first.red,\r\n    last.green - first.green,\r\n    last.blue - first.blue\r\n  );\r\n  return items.map((item, idx) => {\r\n    return {\r\n      ...item,\r\n      color: getColor(\r\n        first.red + ((difference.red/(items.length+1))*(idx+1)),\r\n        first.green + ((difference.green/(items.length+1))*(idx+1)),\r\n        first.blue + ((difference.blue/(items.length+1))*(idx+1))\r\n      )\r\n    }\r\n  });\r\n}\r\n\r\nexport function toColorString(color: Color): string {\r\n  return `rgb(${color.red},${color.green},${color.blue})`;\r\n}\r\n\r\nfunction checkIntegrity(items: Item[]): boolean {\r\n  let integrity = true;\r\n  items.forEach(item => {\r\n    if(item.color) {\r\n      if(!checkItem(item.color)) {\r\n        integrity = false;\r\n      }\r\n    }\r\n  });\r\n\r\n  return integrity;\r\n}\r\n\r\nfunction checkItem(color: Color): boolean {\r\n  if(color.red < 0 || color.red > 255){\r\n    return false;\r\n  }\r\n  if(color.green < 0 || color.green > 255){\r\n    return false;\r\n  }\r\n  if(color.blue < 0 || color.blue > 255){\r\n    return false;\r\n  }\r\n\r\n  return true;\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { BehaviorSubject } from 'rxjs';\nimport { getColorScale, toColorString } from './color-generator';\nimport { Color, Item, ItemDetail, Settings, SettingsImage } from './model';\n\n@Component({\n  selector: 'ngx-rating',\n  templateUrl: './ngx-rating.component.html',\n  styles: [\n    `\n    .rating-container {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n    }\n\n    .title {\n      text-transform: lowercase;\n    }\n\n    .container-scale {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n    }\n\n    .item{\n        margin-right: 10px;\n    }\n    `\n  ],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      multi:true,\n      useExisting: NgxRatingComponent\n    }\n  ]\n})\nexport class NgxRatingComponent implements OnInit, ControlValueAccessor {\n\n  @Input() settings!: Settings;\n\n  items: Item[] = []\n  theme: string = 'squares';\n  images!: string[];\n  styles: string[] = [];\n  showTitle: boolean = false;\n  titlePosition: string = 'top';\n  details: ItemDetail = {} as ItemDetail;\n  style: string[] = [];\n\n  showDescriptionBS = new BehaviorSubject<string>('-');\n  showDescription$ = this.showDescriptionBS.asObservable();\n  actualDescription: string = '-';\n\n  showSelection: number = -1;\n  actualSelection: number = -1;\n  public color: string[] = [];\n\n\n  onChange = (item: Item) => {};\n  onTouch = (item: Item) => {};\n\n  constructor() {}\n\n  ngOnInit(): void {\n    this.items = this.settings.items || [];\n    this.items = getColorScale(this.items);\n    this.color = this.items.map(item => toColorString(item.color || {} as Color));\n    this.theme = this.settings.theme || 'squares';\n    if('images' in this.settings) {\n      this.images = (<SettingsImage>this.settings).images;\n    }\n    this.showTitle = this.settings.showTitle;\n    this.titlePosition = this.settings.titlePosition || 'top';\n    this.details = this.settings.itemDetail;\n  }\n\n  writeValue(item: Item): void {\n    if(Object.keys(item).length !== 0) {\n      this.actualDescription = item.description;\n      this.showDescriptionBS.next(item.description);\n      this.actualSelection = this.items.indexOf(\n        this.items.find(el => item.id === el.id) || {} as Item\n      );\n      this.showSelection = this.actualSelection;\n    }\n    else {\n      this.actualDescription = '-';\n      this.showDescriptionBS.next('-');\n    }\n\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this.onTouch = fn;\n  }\n\n  mouseOver(selectedIdx: number, item: Item){\n    this.showDescriptionBS.next(item.description);\n    this.showSelection = selectedIdx;\n  }\n\n  mouseLeave(){\n    this.showSelection = this.actualSelection;\n    this.showDescriptionBS.next(this.actualDescription);\n  }\n\n  getScaleItemChange(indexSelected: number, item: Item){\n\n    if (this.actualSelection !== indexSelected) {\n      this.actualSelection = indexSelected;\n      this.showSelection = indexSelected;\n      this.actualDescription = item.description;\n      this.showDescriptionBS.next(item.description);\n      this.onChange(item);\n    }\n  }\n\n}\n","<div class=\"rating-container\"\r\n    [ngStyle]=\"{'flex-direction': (titlePosition === 'top') ? 'column' : (titlePosition === 'left') ? 'row' : (titlePosition === 'right') ? 'row-reverse' : 'column-reverse'}\"\r\n>\r\n    <div\r\n        class=\"title\"\r\n        *ngIf=\"showTitle\"\r\n        [ngStyle]=\"{\r\n            'margin': titlePosition === 'top' ? '0 0 20px 0' :\r\n                    titlePosition === 'bottom' ? '20px 0 0 0' :\r\n                    titlePosition === 'left' ? '0 20px 0 0' :\r\n                    titlePosition === 'right' ? '0 0 0 20px' : ''\r\n        }\"\r\n    >\r\n        {{showDescription$ | async}}\r\n    </div>\r\n    <div class=\"container-scale\" *ngIf=\"settings\">\r\n        <ng-container *ngFor=\"let item of items; let idx = index\">\r\n            <div [ngSwitch]=\"theme\">\r\n                <div class=\"item\"\r\n                    *ngSwitchCase=\"'squares'\"\r\n                    (mouseover)=\"mouseOver(idx, item)\"\r\n                    (mouseleave)=\"mouseLeave()\"\r\n                    (click)=\"getScaleItemChange(idx, item)\"\r\n                    [style.width.px]=\"details.width\"\r\n                    [style.height.px]=\"details.height\"\r\n                    [ngStyle]=\"{'background-color': (idx <= showSelection) ? color[idx] : 'grey'}\"\r\n                >\r\n                </div>\r\n                <div class=\"item\"\r\n                    *ngSwitchCase=\"'rounded_squares'\"\r\n                    (mouseover)=\"mouseOver(idx, item)\"\r\n                    (mouseleave)=\"mouseLeave()\"\r\n                    (click)=\"getScaleItemChange(idx, item)\"\r\n                    [style.width.px]=\"details.width\"\r\n                    [style.height.px]=\"details.height\"\r\n                    [ngStyle]=\"{\r\n                        'background-color': (idx <= showSelection) ? color[idx] : 'grey',\r\n                        'border-radius': idx === 0 ? '8px 0 0 8px' : idx === items.length-1 ? '0 8px 8px 0' : ''}\"\r\n                >\r\n                </div>\r\n\r\n                <div\r\n                    *ngSwitchCase=\"'single_icon'\"\r\n                    (mouseover)=\"mouseOver(idx, item)\"\r\n                    (mouseleave)=\"mouseLeave()\"\r\n                    (click)=\"getScaleItemChange(idx, item)\"\r\n                >\r\n                    <div\r\n                        *ngIf=\"images\"\r\n                        class=\"item\"\r\n                        [style.width.px]=\"details.width\"\r\n                        [style.height.px]=\"details.height\"\r\n                        [style.mask.url]=\"images[0]\"\r\n                        style=\"\r\n                            mask-size: {{details.width}}px {{details.height}}px;\r\n                            -webkit-mask: url({{images[0]}}) no-repeat center;\r\n                            -webkit-mask-size: {{details.width}}px {{details.height}}px\"\r\n                        [ngStyle]=\"{'background-color': (idx <= showSelection) ? color[idx] : 'grey'}\"\r\n                    >\r\n                    </div>\r\n                </div>\r\n\r\n                <div\r\n                    *ngSwitchCase=\"'multiple_icons'\"\r\n                    (mouseover)=\"mouseOver(idx, item)\"\r\n                    (mouseleave)=\"mouseLeave()\"\r\n                    (click)=\"getScaleItemChange(idx, item)\"\r\n                >\r\n                    <div\r\n                        *ngIf=\"images\"\r\n                        class=\"item\"\r\n                    >\r\n                        <div *ngIf=\"idx <= showSelection; else falseItems\"\r\n                            [style.width.px]=\"details.width\"\r\n                            [style.height.px]=\"details.height\"\r\n                            [style.backgroundColor]=\"color[idx]\"\r\n                            style=\"\r\n                                mask: url({{images[0]}});\r\n                                mask-size: {{details.width}}px {{details.height}}px;\r\n                                -webkit-mask: url({{images[0]}}) no-repeat center;\r\n                                -webkit-mask-size: {{details.width}}px {{details.height}}px;\"\r\n                        >\r\n                        </div>\r\n                        <ng-template #falseItems>\r\n                            <div\r\n                                [style.width.px]=\"details.width\"\r\n                                [style.height.px]=\"details.height\"\r\n                                [style.backgroundColor]=\"'grey'\"\r\n                                style=\"\r\n                                    mask: url({{images[1]}});\r\n                                    mask-size: {{details.width}}px {{details.height}}px;\r\n                                    -webkit-mask: url({{images[1]}}) no-repeat center;\r\n                                    -webkit-mask-size: {{details.width}}px {{details.height}}px;\"\r\n                            >\r\n                            </div>\r\n                        </ng-template>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </ng-container>\r\n    </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgxRatingComponent } from './ngx-rating.component';\n\n\n\n@NgModule({\n  declarations: [\n    NgxRatingComponent\n  ],\n  imports: [\n    BrowserModule\n  ],\n  exports: [\n    NgxRatingComponent\n  ]\n})\nexport class NgxRatingModule { }\n","/*\n * Public API Surface of ngx-rating\n */\n\nexport * from './lib/ngx-rating.service';\nexport * from './lib/ngx-rating.component';\nexport * from './lib/ngx-rating.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["Injectable","BehaviorSubject","NG_VALUE_ACCESSOR","Component","Input","BrowserModule","NgModule"],"mappings":"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"}